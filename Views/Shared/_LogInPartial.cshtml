@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> _signInManager
@* 
Microsoft.AspNetCore.Identity.SignInManager<Microsoft.AspNetCore.Identity.IdentityUser> signInManager
--> Microsoft.AspNetCore.Identity.SignInManager --> this lets the user sign in 
--> <Microsoft.AspNetCore.Identity.IdentityUser> signInManager --> means will use aspnet.core.Identity will be named as signINManager 



*@
@if (_signInManager.IsSignedIn(User))
{
    <form method="post" id="logoutForm" asp-action="Logoff" asp-controller="Account">
        <ul class="nav navbar-nav">
            <li class="text-white nav-link">Hello, @User.Identity.Name </li>
            <!-- users.identity is coming from name  -->

            <li class="nav-link">
                <a class="text-white" href="javascript:document.getElementById('logoutForm').submit()">LogOff</a>
            </li>
        </ul>
    </form>
}
else 
    @*Means user is not signed in  *@
{
    <ul class="nav navbar-nav">
        <li>
            <a class="nav-link text-white" id="registerLink" asp-controller="Account" asp-action="Register">Register</a>
        </li>

        <li>
            <a class="nav-link text-white" id="registerLink" asp-controller="Account" asp-action="Login">Log in</a>
        </li>
    </ul>
}